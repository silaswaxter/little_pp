---
Checks:
  "bugprone-*, cert-*, clang-analyzer-*, clang-diagnostic-*,
  cppcoreguidelines-*, google-*, modernize-*, performance-*, portability-*,
  readability-*"
WarningsAsErrors: "*"
HeaderFilterRegex: ""
AnalyzeTemporaryDtors: false
FormatStyle: google
CheckOptions:
  # Use Google style guide.
  #-----
  # Classes / Structs / Enums are CamelCase.
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumCase, value: CamelCase }
  # Variables / Parameters are lower_case.
  - { key: readability-identifier-naming.VariableCase, value: lower_case }
  - { key: readability-identifier-naming.ParameterCase, value: lower_case }
  - { key: readability-identifier-naming.PublicMemberCase, value: lower_case }
  # Protected / Private members are lower_case_
  - { key: readability-identifier-naming.PrivateMemberCase, value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberSuffix, value: "_" }
  - {
      key: readability-identifier-naming.ProtectedMemberCase,
      value: lower_case,
    }
  - { key: readability-identifier-naming.ProtectedMemberSuffix, value: "_" }
  # Constexpr / const things are kCamelCase.
  - { key: readability-identifier-naming.ConstexprVariablePrefix, value: "k" }
  - {
      key: readability-identifier-naming.ConstexprVariableCase,
      value: CamelCase,
    }
  - { key: readability-identifier-naming.ClassConstantPrefix, value: "k" }
  - { key: readability-identifier-naming.ClassConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.GlobalConstantPrefix, value: "k" }
  - { key: readability-identifier-naming.GlobalConstantCase, value: CamelCase }
  # Functions are snake_case.
  - { key: readability-identifier-naming.FunctionCase, value: lower_case }
  - { key: readability-identifier-naming.PublicMethodCase, value: lower_case }
  - { key: readability-identifier-naming.PrivateMethodCase, value: lower_case }
  # Look in base class for dependent member references.
  - { key: AggressiveDependentMemberLookup, value: 1 }
---
